package alaTestProgram;

import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.TreeMap;

public class sample2 {

    public static void main(String[] args) {
String s="4673290190";
        Map<String, Double> operatorA = new HashMap<String, Double>();
        operatorA.put("1", 0.9);
        operatorA.put("268", 5.1);
        operatorA.put("46", 0.17);
        operatorA.put("4620", 0.0);
        operatorA.put("468", 0.15);
        operatorA.put("4631", 0.15);
        operatorA.put("4673", 0.9);
        operatorA.put("46732", 1.1);
  
        System.out.println("Unsort Map......");
        printMap(operatorA);
       Iterator i= GetSortedMap(operatorA).keySet().iterator();
        String matchedKey = null;
        String key="";
        while (i.hasNext()) {
            key = (String) i.next();
            if (s.contains(key) && (matchedKey == null || matchedKey.length() < key.length())) {
                matchedKey = key;
            }
        }
        if (matchedKey != null) {
        	System.out.println(matchedKey);
           // s = s.replace(matchedKey, operatorA.get(matchedKey));
        	System.out.print(operatorA.get(matchedKey));
        }
        System.out.println("\nSorted Map......By Key");
       
    }

    public static <K, V> void printMap(Map<K, V> map) {
        for (Map.Entry<K, V> entry : map.entrySet()) {
            System.out.println("Key : " + entry.getKey() 
				+ " Value : " + entry.getValue());
        }
    }

    private static Map<String,Double> GetSortedMap(Map<String,Double> operator)
    {
    	 Map<String , Double> treeMap = new TreeMap<String, Double>(
                 new Comparator<String>() {

                     @Override
                     public int compare(String o1, String o2) {
                         return o2.compareTo(o1);
                     }

                 });
         treeMap.putAll(operator);

        return treeMap;

    }
    
}